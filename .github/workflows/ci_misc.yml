# SPDX-FileCopyrightText: 2006-2025, Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2025, Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC0-1.0

name: Misc

on:
  push:
    branches:
      - 'main'
  pull_request:
    types:
      - unlabeled
  workflow_dispatch:

concurrency:
  group: misc-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name != 'push' }}

env:
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -Eexuo pipefail {0}

jobs:
  build:
    name: ${{ matrix.name || matrix.build }} ${{ matrix.compiler }}
    runs-on: ubuntu-latest
    if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch' || github.event.label.name == 'lint'
    strategy:
      fail-fast: false
      matrix:
        build: [snippet, performance, header, tutorial]
        compiler: ["clang-latest", "clang-third-latest", "gcc-latest", "gcc-third-latest"]
        use_include_dependencies: ["OFF"]
        include:
          - name: "Non-cyclic tests"
            compiler: "gcc-third-latest"
            build: unit
            use_include_dependencies: "ON"
    container:
      image: ghcr.io/seqan/${{ matrix.compiler }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup cache
        uses: seqan/actions/setup-actions-cache@main

      - name: Configure tests
        run: |
          mkdir build && cd build
          cmake ../test/${{ matrix.build }} -DCMAKE_BUILD_TYPE=Release \
                                            -DHIBF_USE_INCLUDE_DEPENDENCIES="${{ matrix.use_include_dependencies }}" \
                                            -DCMAKE_DEPENDS_USE_COMPILER=OFF
          case "${{ matrix.build }}" in
            unit) make gtest_main;;
            snippet) make gtest_main;;
            performance) make benchmark_main;;
            header) make gtest_main benchmark_main;;
          esac

      - name: Check cyclic includes
        if: matrix.use_include_dependencies == 'ON'
        working-directory: build
        run: |
          make -k all_dependencies
          cmake .

      - name: Build tests
        if: matrix.use_include_dependencies == 'OFF'
        working-directory: build
        run: |
          ccache -z
          make -k
          ccache -sv

      - name: Run tests
        if: matrix.use_include_dependencies == 'OFF'
        working-directory: build
        run: ctest . -j --output-on-failure --no-tests=error
